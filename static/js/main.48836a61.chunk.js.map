{"version":3,"sources":["components/HomePage/HomePage.jsx","components/PeopleTable/PeopleTable.jsx","components/PeoplePage/PeoplePage.jsx","api.js","components/NotFoundPage/NotFoundPage.jsx","components/MainNavigation/MainNavigation.jsx","App.jsx","index.jsx"],"names":["HomePage","PeopleTable","people","Table","striped","Header","Row","HeaderCell","Body","map","person","key","slug","Cell","name","sex","born","died","motherName","fatherName","PeoplePage","useState","setPeople","useEffect","fetch","then","response","ok","Error","json","NotFoundPage","MainNavigation","Menu","Item","to","exact","className","App","path","ReactDOM","render","document","getElementById"],"mappings":"mPAEaA,G,YAAW,kBACtB,2C,iBCEWC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzB,kBAACC,EAAA,EAAD,CAAOC,SAAO,GACZ,kBAACD,EAAA,EAAME,OAAP,KACE,kBAACF,EAAA,EAAMG,IAAP,KACE,kBAACH,EAAA,EAAMI,WAAP,aACA,kBAACJ,EAAA,EAAMI,WAAP,YACA,kBAACJ,EAAA,EAAMI,WAAP,aACA,kBAACJ,EAAA,EAAMI,WAAP,aACA,kBAACJ,EAAA,EAAMI,WAAP,eACA,kBAACJ,EAAA,EAAMI,WAAP,iBAIJ,kBAACJ,EAAA,EAAMK,KAAP,KACGN,EAAOO,KAAI,SAAAC,GAAM,OAChB,kBAACP,EAAA,EAAMG,IAAP,CAAWK,IAAKD,EAAOE,MACrB,kBAACT,EAAA,EAAMU,KAAP,KAAaH,EAAOI,MACpB,kBAACX,EAAA,EAAMU,KAAP,KAAaH,EAAOK,KACpB,kBAACZ,EAAA,EAAMU,KAAP,KAAaH,EAAOM,MACpB,kBAACb,EAAA,EAAMU,KAAP,KAAaH,EAAOO,MACpB,kBAACd,EAAA,EAAMU,KAAP,KAAaH,EAAOQ,YACpB,kBAACf,EAAA,EAAMU,KAAP,KAAaH,EAAOS,mBCtBjBC,EAAa,WAAO,IAAD,EACFC,mBAAS,IADP,mBACvBnB,EADuB,KACfoB,EADe,KAQ9B,OALAC,qBAAU,WCHVC,MAHE,qEAICC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,+BAGR,OAAOF,EAASG,UDDfJ,KAAKH,KACP,IAGD,oCACE,2CACA,kBAAC,EAAD,CAAapB,OAAQA,MEbd4B,EAAe,kBAC1B,+C,SCCWC,EAAiB,kBAC5B,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,kBAAC,IAAD,CACEC,GAAG,IACHC,OAAK,EACLC,UAAU,eAHZ,cAQF,kBAACJ,EAAA,EAAKC,KAAN,KACE,kBAAC,IAAD,CACEC,GAAG,UACHE,UAAU,eAFZ,kBCeSC,EArBH,kBACV,yBAAKD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOE,KAAK,WACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,IAAIH,OAAK,GACnB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAUG,KAAK,QAAQJ,GAAG,MAE1B,kBAAC,EAAD,SCnBNK,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.48836a61.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage = () => (\n  <h1>Home Page</h1>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Table } from 'semantic-ui-react';\n\nexport const PeopleTable = ({ people }) => (\n  <Table striped>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Name</Table.HeaderCell>\n        <Table.HeaderCell>Sex</Table.HeaderCell>\n        <Table.HeaderCell>Born</Table.HeaderCell>\n        <Table.HeaderCell>Died</Table.HeaderCell>\n        <Table.HeaderCell>Mother</Table.HeaderCell>\n        <Table.HeaderCell>Father</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      {people.map(person => (\n        <Table.Row key={person.slug}>\n          <Table.Cell>{person.name}</Table.Cell>\n          <Table.Cell>{person.sex}</Table.Cell>\n          <Table.Cell>{person.born}</Table.Cell>\n          <Table.Cell>{person.died}</Table.Cell>\n          <Table.Cell>{person.motherName}</Table.Cell>\n          <Table.Cell>{person.fatherName}</Table.Cell>\n        </Table.Row>\n      ))}\n    </Table.Body>\n  </Table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      sex: PropTypes.string.isRequired,\n      born: PropTypes.number.isRequired,\n      died: PropTypes.number.isRequired,\n      motherName: PropTypes.string,\n      fatherName: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  return (\n    <>\n      <h1>People Page</h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","const BASE_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => (\n  fetch(BASE_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your comment`);\n      }\n\n      return response.json();\n    })\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h1>Page Not Found</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\n\nexport const MainNavigation = () => (\n  <Menu>\n    <Menu.Item>\n      <NavLink\n        to=\"/\"\n        exact\n        className=\"navbar-item\"\n      >\n        Home Page\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item>\n      <NavLink\n        to=\"/people\"\n        className=\"navbar-item\"\n      >\n        People Page\n      </NavLink>\n    </Menu.Item>\n  </Menu>\n);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { MainNavigation } from './components/MainNavigation';\n\nconst App = () => (\n  <div className=\"App\">\n    <MainNavigation />\n    <Switch>\n\n      <Route path=\"/people\">\n        <PeoplePage />\n      </Route>\n\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n\n      <Redirect path=\"/home\" to=\"/\" />\n\n      <NotFoundPage />\n\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}